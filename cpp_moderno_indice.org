* Índice

+[[./capitulo_1_errado.org][Capítulo 1: Introdução ao CPP Moderno]]+
[[./capitulo_1.org][Capítulo 1: Mergulhando no C++ Moderno: Fundamentos e Filosofia]]
[[./capitulo_2.org][Capítulo 2: Tipos Fundamentais, Variáveis e Controle de Fluxo: Os Átomos da Lógica]]
[[./capitulo_3.org][Capítulo 3: A Anatomia dos Dados: Um Mergulho Profundo nos Tipos Primitivos]]
[[./capitulo_4.org][Capítulo 4: A Realidade Física dos Dados: Alinhamento, Conversões e o Abismo do Indefinido]]

[[./parada_estrategica.org][Parada Estratégica: Subir ou Descer o Nível?]]

[[./interludio_1.org][Interlúdio: Um Mapa Para a Maestria — Por Que o Caminho Importa?]]

[[./capitulo_5.org][Capítulo 5: Funções — A Arte de Organizar a Lógica]]
[[./capitulo_6.org][Capítulo 6: A Mecânica das Funções — Por Baixo dos Panos]]

+[[./capitulo_7_errado.org][Capítulo 7: Agregando Dados — A Simplicidade e o Poder das Structs]]+

[[./capitulo_7.org][Capítulo 7: Definindo Dados e Constantes — Structs, Enums e o Escopo Global]]
[[./capitulo_8.org][Capítulo 8: Indireção e Memória — Uma Análise de Ponteiros]]
[[./capitulo_9.org][Capítulo 9: A Arquitetura da Memória e o Gerenciamento Dinâmico]]

+[[./capitulo_10_errado.org][Capítulo 10: Gerenciamento de Recursos como um Princípio — Ponteiros Inteligentes e a Semântica de Posse]]+

[[./capitulo_10.org][Capítulo 10: Posse Exclusiva e Gerenciamento de Recursos — Uma Análise de std::unique_ptr]]
[[./capitulo_11.org][Capítulo 11: Posse Compartilhada e o Ciclo de Vida Colaborativo — std::shared_ptr]]
[[./capitulo_12.org][Capítulo 12: Observação Não-Proprietária e a Quebra de Ciclos de Referência — std::weak_ptr]]
[[./capitulo_13.org][Capítulo 13: Manipulação de Tipos e Auto-Referência em Posse Compartilhada]]

[[./analose_const.org][Análise da Palavra-chave const em Métodos de Membro]]
[[./virtual_override.org][Análise de virtual e override]]

[[./capitulo_14.org][Capítulo 14: Interagindo com o Mundo Exterior — Manipulação de Arquivos em C++]]

[[./topicos_arquivos_teriminou.org][O Tópico de Arquivos Terminou? Não, e Eis o Que Falta:]]

[[./capitulo_15.org][Capítulo 15: Mecânica Avançada de I/O — Estado, Acesso Aleatório e Performance]]
[[./capitulo_16.org][Capítulo 16: Construindo Abstrações — A class e o Encapsulamento]]
[[./capitulo_17.org][Capítulo 17: Hierarquias e Comportamento Dinâmico — Herança e Polimorfismo]]

+[[./capitulo_18_errado.org][Capítulo 18: Organização de Código — Do Pré-processador aos Módulos do C++20]]+

[[./capitulo_18.org][Capítulo 18 (Revisado e Aprofundado): Dominando o Modelo Clássico — Headers, Linkagem e o Pré-processador]]
[[./capitulo_19.org][Capítulo 19: A Arquitetura Moderna — Módulos, Partições e Interfaces]]
[[./capitulo_20.org][Capítulo 20: Da Linha de Comando à Automação — Construindo Projetos com make e Makefile]]
 
+[[./capitulo_21_errado.org][Capítulo 21: A Anatomia de um Projeto CPP Canônico — Estrutura de Diretórios e Filosofia]]+

[[./capitulo_21.org][Capítulo 21: A Filosofia da Estrutura de Diretórios — Um Blueprint para a Clareza]]
[[./capitulo_22.org][Capítulo 22: Gerenciamento de Dependências — Construindo Sobre os Ombros de Gigantes]]
[[./capitulo_23.org][Capítulo 23: A Meta-Programação do Build — Dominando o CMake]]
[[./capitulo_24.org][Capítulo 24: A Filosofia da STL e a Genialidade dos Iteradores]]
[[./capitulo_25.org][Capítulo 25: Contêineres Sequenciais — Gerenciando Coleções Ordenadas]]
[[./capitulo_26.org][Capítulo 26: Contêineres Associativos — Busca e Recuperação Eficientes]]
[[./capitulo_27.org][Capítulo 27: O Poder do <algorithm> e a Programação Expressiva]]
[[./capitulo_28.org][Capítulo 28: A Natureza da Lambda — O Functor Anônimo]]
[[./capitulo_29.org][Capítulo 29: A Alma da Lambda — Mecânica de Captura em Detalhe]]
[[./capitulo_30.org][Capítulo 30: Estado e Mutabilidade em Lambdas]]
[[./capitulo_31.org][Capítulo 31: Lambdas e a Programação Genérica]]
[[./capitulo_32.org][Capítulo 32: Padrões de Uso e Técnicas Avançadas com Lambdas]]
[[./capitulo_33.org][Capítulo 33: A Mecânica do Lançamento — throw e o Desenrolamento da Pilha]]
[[./capitulo_34.org][Capítulo 34: A Arte da Captura — catch e a Hierarquia de Exceções]]
[[./capitulo_35.org][Capítulo 35: O Contrato de Segurança — Garantias de Exceção]]
[[./capitulo_36.org][Capítulo 36: O Especificador noexcept — Uma Análise Profunda]]
[[./capitulo_37.org][Capítulo 37: Além das Exceções — Tratamento de Erros no C++ Moderno]]
[[./capitulo_38.org][Capítulo 38: A Regra dos Três — O Paradigma Clássico de Gerenciamento de Recursos]]
[[./capitulo+39.org][Capítulo 39: A Regra dos Cinco — A Evolução com a Semântica de Movimento (C++11)]]
[[./capitulo_40.org][Capítulo 40: A Regra do Zero — A Filosofia do C++ Moderno]]
[[./capitulo_41.org][Capítulo 41: Uma Nuance Final — O Padrão Copy-and-Swap]]
[[./capitulo_42.org][Capítulo 42: Herança — Construindo Hierarquias de Tipos]]
[[./capitulo_43.org][Capítulo 43: Polimorfismo — Uma Interface, Múltiplas Formas]]
[[./capitulo_44.org][Capítulo 44: Classes Abstratas e Interfaces]]
[[./capitulo_45.org][Capítulo 45: A Regra de Ouro — Destrutores Virtuais]]
[[./capitulo_bonus.org][Capítulo Bônus: A Arte e os Perigos do cast em C++]]
[[./capitulo_46.org][Capítulo 46: Introdução às Threads (std::thread)]]
[[./capitulo_47.org][Capítulo 47: O Perigo — Condições de Corrida e Dados Compartilhados]]
[[./capitulo_48.org][Capítulo 48: A Solução — Mutexes e Locks para Exclusão Mútua]]
[[./capitulo_49.org][Capítulo 49: Operações Atômicas (std::atomic)]]
[[./capitulo_50.org][Capítulo 50: Tarefas e o Futuro (std::async, std::future, std::promise)]]

[[./capitulo_51.org][Capítulo 51: Testes Expressivos com Catch2 — A Filosofia e a Prática]]
[[./capitulo_52.org][Capítulo 52: Forjando Ferramentas — Construindo um Micro-Framework de Testes]]
[[./capitulo_53.org][Capítulo 53: Forjando Ferramentas — A Arte da Asserção]]
